{"version":3,"file":"static/js/main.chunk.js","sources":["C:/Users/Cu8/projects/three-tile-poc/src/index.css","webpack:///./src/index.css?bb0a","C:/Users/Cu8/projects/three-tile-poc/src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n    monospace;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;AACpC;;AAEA;EACE;aACW;AACb\",\"sourcesContent\":[\"body {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n    monospace;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\",\n      function () {\n        content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import \"./index.css\";\n\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport * as SkeletonUtils from \"three/examples/jsm/utils/SkeletonUtils\";\n\nimport * as Stats from \"stats.js\";\n\nconst init = async () => {\n  var stats = new Stats();\n  stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n  document.body.appendChild(stats.dom);\n\n  const scene = new THREE.Scene();\n  const aspectRatio = window.innerWidth / window.innerHeight;\n  const cameraWidth = 10;\n  const cameraHeight = cameraWidth / aspectRatio;\n\n  const modelLoader = new GLTFLoader();\n  const knightContainer = await modelLoader.loadAsync(\"./KnightCharacter.gltf\");\n\n  const knight = knightContainer.scene;\n\n  // const loader = new THREE.TextureLoader();\n  // const treeTexture = await loader.loadAsync(\"./tree.jpg\");\n\n  const camera = new THREE.OrthographicCamera(\n    cameraWidth / -2, // left\n    cameraWidth / 2, // right\n    cameraHeight / 2, // top\n    cameraHeight / -2, // bottom\n    0, // near plane\n    700 // far plane\n  );\n\n  camera.position.set(0, 5, 3);\n  camera.lookAt(0, 0, 0);\n\n  const renderer = new THREE.WebGLRenderer();\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  const light = new THREE.AmbientLight(0xffffff, 0.6); // soft white light\n  scene.add(light);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n  scene.add(directionalLight);\n\n  const boxGeometry = new THREE.BoxGeometry();\n  const material = new THREE.MeshStandardMaterial({\n    color: 0x0095dd,\n  });\n\n  const leftWall = new THREE.Mesh(boxGeometry, material);\n  leftWall.scale.z = 10;\n  leftWall.position.set(-0.5 - 5, 0.5, 0);\n  scene.add(leftWall);\n\n  const rightWall = new THREE.Mesh(boxGeometry, material);\n  rightWall.scale.z = 10;\n  rightWall.position.set(0.5 + 5, 0.5, 0);\n  scene.add(rightWall);\n\n  const topWall = new THREE.Mesh(boxGeometry, material);\n  topWall.scale.x = 10;\n  topWall.position.set(0, 0.5, -5 - 0.5);\n  scene.add(topWall);\n\n  const bottomWall = new THREE.Mesh(boxGeometry, material);\n  bottomWall.scale.x = 10;\n  bottomWall.position.set(0, 0.5, 5 + 0.5);\n  scene.add(bottomWall);\n\n  // cube.position.set(0.5, 0.5, 0.5);\n\n  const planeGeometry = new THREE.PlaneGeometry(10, 10);\n  const planeMaterial = new THREE.MeshStandardMaterial({\n    color: 0x999999,\n  });\n  const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n  plane.rotation.x = -Math.PI / 2;\n  scene.add(plane);\n\n  camera.position.z = 2.5;\n\n  // const treeMaterial = new THREE.SpriteMaterial({ map: treeTexture });\n\n  // const sprite = new THREE.Sprite(treeMaterial);\n  // sprite.center.set(0.5, 0);\n  // sprite.position.set(0, 0, 1.5);\n  // scene.add(sprite);\n\n  var grid = new THREE.GridHelper(10, 10);\n  grid.position.y += 0.01;\n  scene.add(grid);\n  const models = [];\n\n  const knightClips = knightContainer.animations;\n  const center = new THREE.Vector2(0, 0);\n\n  for (let i = 0; i < 150; i++) {\n    const model = SkeletonUtils.clone(knight);\n    model.scale.set(0.3, 0.3, 0.3);\n    model.position.set(Math.random() * 10 - 5, 0, Math.random() * 10 - 5);\n    model.animationMixer = new THREE.AnimationMixer(model);\n\n    const clip = THREE.AnimationClip.findByName(knightClips, \"Run\");\n\n    model.animationMixer.clipAction(clip).play();\n    const vel = new THREE.Vector2(2, 0);\n    vel.rotateAround(center, Math.random() * Math.PI * 2);\n    model.vel = vel;\n\n    models.push(model);\n\n    scene.add(model);\n  }\n\n  // let speedZ = 0.01;\n  // let posZ = sprite.position.z;\n  const animate = function () {\n    requestAnimationFrame(animate);\n    const delta = 0.015;\n\n    // if (posZ > 3) {\n    //   speedZ = -0.01;\n    // } else if (posZ < -1) {\n    //   speedZ = 0.01;\n    // }\n    // posZ += speedZ;\n    // sprite.position.z = Math.round(posZ);\n    stats.begin();\n    for (let model of models) {\n      model.position.x += model.vel.x * delta;\n      model.position.z += model.vel.y * delta;\n\n      if (model.position.x >= 5 || model.position.x <= -5) {\n        model.vel.x *= -1;\n      }\n      if (model.position.z >= 5 || model.position.z <= -5) {\n        model.vel.y *= -1;\n      }\n      model.animationMixer.update(delta);\n\n      model.rotation.y = Math.PI / 2 - model.vel.angle();\n    }\n\n    renderer.render(scene, camera);\n    stats.end();\n  };\n\n  animate();\n};\n\ninit();\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}